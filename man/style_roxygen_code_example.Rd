% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/roxygen-examples.R
\name{style_roxygen_code_example}
\alias{style_roxygen_code_example}
\title{Style a roxygen code example that may contain dontrun and friends}
\usage{
style_roxygen_code_example(example, transformers)
}
\arguments{
\item{example}{Roxygen example code.}

\item{transformers}{A list of \emph{named} transformer functions}
}
\description{
Parses roxygen2 comments into code, breaks it into dont* (dontrun, dontest,
dontshow) and run sections and processes each segment indicidually using
\code{\link[=style_roxygen_example_snippet]{style_roxygen_example_snippet()}}.
}
\section{Hierarchy}{

Styling involves splitting roxygen example code into segments, and segments
into snippets. This describes the process for input of
\code{\link[=parse_transform_serialize_roxygen]{parse_transform_serialize_roxygen()}}:
\itemize{
\item Splitting code into roxygen example code and other code. Downstream,
we are only concerned about roxygen code. See
\code{\link[=parse_transform_serialize_roxygen]{parse_transform_serialize_roxygen()}}.
\item Every roxygen example code can have zero or more
dontrun / dontshow / donttest sequences. We next create segments of roxygen
code examples that contain at most one of these. See
\code{\link[=style_roxygen_code_example]{style_roxygen_code_example()}}.
\item We further split the segment that contains at most one dont* sequence into
snippets that are either don* or not. See
\code{\link[=style_roxygen_code_example_segment]{style_roxygen_code_example_segment()}}.
}

Finally, that we have roxygen code snippets that are either dont* or not,
we style them in \code{\link[=style_roxygen_example_snippet]{style_roxygen_example_snippet()}} using
\code{\link[=parse_transform_serialize_r]{parse_transform_serialize_r()}}.
}

\keyword{internal}
